{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, ElementRef, ViewChildren } from '@angular/core';\nimport { COURSES } from '../db-data';\nimport { CourseCardComponent } from './course-card/course-card.component';\nlet AppComponent = class AppComponent {\n  constructor() {\n    this.courses = [...COURSES];\n  }\n  ngAfterViewInit() {}\n  onCourseSelected(course) {}\n};\n__decorate([ViewChildren(CourseCardComponent, {\n  read: ElementRef\n})], AppComponent.prototype, \"cards\", void 0);\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})], AppComponent);\nexport { AppComponent };","map":{"version":3,"names":["Component","ElementRef","ViewChildren","COURSES","CourseCardComponent","AppComponent","constructor","courses","ngAfterViewInit","onCourseSelected","course","__decorate","read","selector","templateUrl","styleUrls"],"sources":["/home/suraj/angular-demo-projects/angular-course/src/app/app.component.ts"],"sourcesContent":["import {AfterViewInit, Component, ElementRef, QueryList, ViewChild, ViewChildren} from '@angular/core';\nimport {COURSES} from '../db-data';\nimport {Course} from './model/course';\nimport {CourseCardComponent} from './course-card/course-card.component';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements AfterViewInit {\n\n    courses = [...COURSES];\n    // courses = COURSES;\n\n    \n    @ViewChildren(CourseCardComponent, {read: ElementRef})\n    cards : QueryList<ElementRef>;\n\n\n    constructor() {\n\n    }\n\n    ngAfterViewInit() {\n\n    }\n\n    onCourseSelected(course:Course) {\n\n    }\n\n}\n"],"mappings":";;;;;;;AAAA,SAAuBA,SAAS,EAAEC,UAAU,EAAwBC,YAAY,QAAO,eAAe;AACtG,SAAQC,OAAO,QAAO,YAAY;AAElC,SAAQC,mBAAmB,QAAO,qCAAqC;AAOhE,IAAMC,YAAY,GAAlB,MAAMA,YAAY;EAUrBC,YAAA;IARA,KAAAC,OAAO,GAAG,CAAC,GAAGJ,OAAO,CAAC;EAUtB;EAEAK,eAAeA,CAAA,GAEf;EAEAC,gBAAgBA,CAACC,MAAa,GAE9B;CAEH;AAfGC,UAAA,EADCT,YAAY,CAACE,mBAAmB,EAAE;EAACQ,IAAI,EAAEX;AAAU,CAAC,CAAC,C,0CACxB;AAPrBI,YAAY,GAAAM,UAAA,EALxBX,SAAS,CAAC;EACTa,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,sBAAsB;EACnCC,SAAS,EAAE,CAAC,qBAAqB;CAClC,CAAC,C,EACWV,YAAY,CAsBxB"},"metadata":{},"sourceType":"module","externalDependencies":[]}